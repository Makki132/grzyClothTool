<UserControl x:Class="grzyClothTool.Controls.CustomButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:grzyClothTool.Controls"
             xmlns:icons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
             x:Name="MyCustomButton"
             d:Height="40" d:Width="280"
             mc:Ignorable="d">
    <UserControl.Resources>
        <!-- Modern Button Style for CustomButton (matches ModernButton from Shared.xaml) -->
        <Style TargetType="Button" x:Key="RoundedButton">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Background" Value="{DynamicResource Brush200}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush950}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush300}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="3" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                            Focusable="False" 
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center" 
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush300}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush400}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ToggleButton Style (matches ModernButton appearance) -->
        <Style x:Key="ToggleButtonVisibility" TargetType="ToggleButton">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Background" Value="{DynamicResource Brush200}" />
            <Setter Property="Foreground" Value="{DynamicResource Brush950}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush300}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="3" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush300}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush400}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Brush400}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding DropdownEnabled, ElementName=MyCustomButton}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <Grid>
        <!-- Main button container -->
        <Border x:Name="btn" BorderThickness="0" CornerRadius="3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <!-- Main button -->
                <Button Grid.Column="0"
                        Content="{Binding Label, ElementName=MyCustomButton}" 
                        ToolTip="{Binding Tooltip, ElementName=MyCustomButton}" 
                        ToolTipService.InitialShowDelay="0" 
                        HorizontalContentAlignment="Center" 
                        VerticalContentAlignment="Center" 
                        FontSize="{Binding FontSize, ElementName=MyCustomButton}" 
                        Click="Button_Click" 
                        Style="{StaticResource RoundedButton}"
                        Padding="{Binding Padding, ElementName=MyCustomButton}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" TextWrapping="NoWrap" />
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                
                <!-- Dropdown toggle button -->
                <ToggleButton Grid.Column="1"
                              Style="{StaticResource ToggleButtonVisibility}" 
                              x:Name="DropdownToggle" 
                              VerticalAlignment="Stretch" 
                              Width="24" 
                              Margin="0">
                    <Path Data="M 0 0 L 4 4 L 8 0 Z" 
                          Fill="{DynamicResource Brush950}" 
                          Width="8" 
                          Height="5" 
                          Stretch="Fill" />
                </ToggleButton>
            </Grid>
        </Border>

        <!-- Dropdown popup -->
        <Popup Width="{Binding ActualWidth, ElementName=btn}" 
               PlacementTarget="{Binding ElementName=btn}" 
               Placement="Bottom" 
               StaysOpen="False" 
               IsOpen="{Binding IsChecked, ElementName=DropdownToggle}" 
               AllowsTransparency="True">
            <Border CornerRadius="3" 
                    Background="{DynamicResource Brush200}" 
                    BorderBrush="{DynamicResource Brush300}" 
                    BorderThickness="1" 
                    Padding="2">
                <ContentPresenter x:Name="DropdownContentPresenter" 
                                Content="{Binding Content, ElementName=MyCustomButton}" />
            </Border>
        </Popup>
    </Grid>
</UserControl>
